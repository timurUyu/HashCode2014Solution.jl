var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = HashCode2014Solution","category":"page"},{"location":"#HashCode2014Solution","page":"Home","title":"HashCode2014Solution","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for HashCode2014Solution.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [HashCode2014Solution]","category":"page"},{"location":"#HashCode2014Solution.RouteGrid","page":"Home","title":"HashCode2014Solution.RouteGrid","text":"RouteGrid\n\nTransform a city into a graph where each junction is a node, and the streets are edges.\n\nFields\n\nneighbors::Vector{SVector{RouteGridNode}}: for each junction, the list of street-junctions that can be reached from it.\n\n\n\n\n\n","category":"type"},{"location":"#HashCode2014Solution.RouteGridNode","page":"Home","title":"HashCode2014Solution.RouteGridNode","text":"RouteGridNode\n\nGroup a junction and a street that leads to it together.\n\nFields\n\nstreet::Int: a street in the city\njunction::Int: a junction that can be reached from the street\ndistance::Int: the length of the street\n\n\n\n\n\n","category":"type"},{"location":"#HashCode2014Solution.ComputeUpperBound-Tuple{HashCode2014.City, Int64, RouteGrid}","page":"Home","title":"HashCode2014Solution.ComputeUpperBound","text":"ComputeUpperBound(city, duration_limit)\n\nAlgorithm to compute upper bound on distance. Compares velocity of each street and constructs 8 separate paths for each car in a \"drag race\" style journey. This approach relaxes the constraint on connectivity of the streets.\n\nFields\n\n'city::City': a street in the city\n'duration_limit::Int64': the total time limit imposed on cars traversing streets\n\n\n\n\n\n","category":"method"},{"location":"#HashCode2014Solution.create_grid-Tuple{HashCode2014.City}","page":"Home","title":"HashCode2014Solution.create_grid","text":"create_grid(city::City)\n\nCreate a RouteGrid from a City.\n\nArguments\n\ncity::City: the city to transform\n\n\n\n\n\n","category":"method"},{"location":"#HashCode2014Solution.random_walk_modified-Tuple{Random.AbstractRNG, HashCode2014.City}","page":"Home","title":"HashCode2014Solution.random_walk_modified","text":"random_walk_modified(rng, city)\nrandom_walk_modified(city)\n\nModified version of random_walk() from HashCode2014.\n\n\n\n\n\n","category":"method"}]
}
